/**过滤器*/
var hideBankNum = function (bankNum) {
  if (bankNum == undefined || bankNum == null || bankNum == '' || bankNum.length<4){
    return bankNum;
  } else{
    var bankEnd = bankNum.substring(bankNum.length - 4, bankNum.length);
    return "**** **** **** " + bankEnd
  }
};

var checkTextIsEmotion = function (emoMsg, emotionList,path){
  //检查是否有表情字符，有则转成表情图片
  var emoPath, transMsg;
  var reg = getRegExp("\[(.*?)\]", "gm");
  transMsg = emoMsg.replace(reg, function (match) {
    var len = emotionList.length;
    for (var i = 0; i < len; i++) {
      if (emotionList[i].text === match) {
        emoPath = path + emotionList[i].name + '.png';
        return '<img class="chat-emo"  src = "' + emoPath + '" />'
      }
    }
    return match;
  });
  return transMsg ;
};

var timeTodata=function(str) {
  return str.length > 0 ? str.split(" ")[0] : ''; // yyyy-MM-dd
};

var nameToPrivacy = function (str) {
  if (str == undefined || str == null || str==''){
    return '';
  }else{
    return str.substring(0,1)+'**';
  }
};

/**
 * 距离单位转换(m达到标准转成km)
 */
var distanceUnitCvs = function(distance) {
  if (distance == undefined || distance == null || distance == '' || distance == 'null') {
    return '0km';
  }
  else {
    return Number(distance).toFixed(1) + "km";
  }
  // if (distance == undefined || distance == null || distance == '' || distance == 'null'){
  //   return '0m';
  // }
  // else if (distance < 1000){
  //   return distance+'m';
  // }
  // else {
  //   var resDistance = (Math.round(distance / 100) / 10).toFixed(1);
  //   return resDistance+ "km";
  // }
};

/**
 * 字符串是否包含某个字符
 */
var strContainsIsCharacter=function(str,character){
  if (str == undefined || str == null || str==''){
    return false;
  }
  if (character == undefined || character == null || character == '') {
    return false;
  }
  if(str.indexOf(character)>= 0) {
    return true;
  }else{
    return false;
  }
};


module.exports = {
  hideBankNum: hideBankNum,
  checkTextIsEmotion: checkTextIsEmotion,
  timeTodata: timeTodata,
  nameToPrivacy: nameToPrivacy,
  distanceUnitCvs: distanceUnitCvs,
  strContainsIsCharacter: strContainsIsCharacter
};
